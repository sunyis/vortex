# Prisma
# https://www.prisma.io/docs/reference/database-reference/connection-urls#env
# postgresql://USER:PASSWORD@HOST:PORT/DATABASE
DATABASE_URL="postgresql://postgres:123456@localhost:5432/vortex"
# If you use docker-compose, you should use the following configuration
# POSTGRES_USER="postgres"
# POSTGRES_PASSWORD="123456"
# POSTGRES_DB="vortex"

# Next Auth
# You can generate a new secret on the command line with:
# openssl rand -base64 32
# https://next-auth.js.org/configuration/options#secret
NEXTAUTH_SECRET=""
NEXTAUTH_URL="http://localhost:3000"

# Next Auth Providers
# Next Auth GitHub Provider
# GITHUB_CLIENT_ID=""
# GITHUB_CLIENT_SECRET=""

# Next Auth Google Provider
# GOOGLE_CLIENT_ID=""
# GOOGLE_CLIENT_SECRET=""

# Next Auth Email Provider
# smtp://username:password@smtp.example.com:587
EMAIL_SERVER=""
# noreply@example.com
EMAIL_FROM=""

# Redis
REDIS_URL="redis://localhost:6379"
# REDIS_USERNAME=
REDIS_PASSWORD="123456"
REDIS_DB="0"
# This should accessible by the agent node
# AGENT_REDIS_URL=

# Server
SERVER_URL="http://localhost:3000"
AGENT_SHELL_URL="https://raw.githubusercontent.com/jarvis2f/vortex-agent/main/scripts"
JOB_ENABLED=true

# Payment
## DePay https://depay.com
DEPAY_INTEGRATION_ID=""
DEPAY_PUBLIC_KEY=""

# Umami https://umami.is/docs
#NEXT_PUBLIC_UMAMI_URL
# script.js
#NEXT_PUBLIC_UMAMI
# website id
#NEXT_PUBLIC_UMAMI_ID
